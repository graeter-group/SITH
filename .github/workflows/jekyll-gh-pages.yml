# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Build & Deploy with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
# permissions:
#   contents: read
#   pages: write
#   id-token: write
#   pull-requests: write
#   issues: write
#   repository-projects: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Sphinx autodoc build html
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: ammaraskar/sphinx-action@master
      with:
        docs-folder: "docs"
        pre-build-command: "pip install sphinx-rtd-theme && apt-get install -y latexmk texlive-latex-recommended texlive-latex-extra texlive-fonts-recommended"
        build-command: "sphinx-build -a -b html . html"
    - uses: actions/upload-artifact@master
      with:
        name: page
        path: html/SITH
        if-no-files-found: error
    - name: Commit documentation changes
      run: |
        git clone https://github.com/ammaraskar/sphinx-action-test.git --branch gh-pages --single-branch gh-pages
        cp -r html/SITH/* gh-pages/
        cd gh-pages
        touch .nojekyll
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Update documentation" -a || true
        # The above command will fail if no changes were present, so we ignore
        # that.
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        branch: gh-pages
        directory: gh-pages
        github_token: ${{ secrets.GITHUB_TOKEN }}
    
  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: github-pages
      url: ${{steps.deployment.outputs.page_url}}
      
    steps:
    - uses: actions/download-artifact@master
      with:
        name: page
        path: .
    - uses: actions/configure-pages@v1
    - uses: actions/upload-pages-artifact@v1
      with:
        path: .
    - id: deployment
      uses: actions/deploy-pages@main

  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Upload Pages artifact
  #       uses: actions/upload-pages-artifact@v2

  
  # # Build job
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v3
  #     - name: Setup Pages
  #       uses: actions/configure-pages@v3
  #     - name: Build with Jekyll
  #       uses: actions/jekyll-build-pages@v1
  #       with:
  #         source: ../../html/SITH/index.html
  #         destination: ./_site
  #     - name: Upload artifact
  #       uses: actions/upload-pages-artifact@v2

  # deploy:
  #   # Add a dependency to the build job
  #   needs: build

  #   # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
  #   permissions:
  #     pages: write      # to deploy to Pages
  #     id-token: write   # to verify the deployment originates from an appropriate source

  #   # Deploy to the github-pages environment
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}

  #   # Specify runner + deployment step
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2 # or the latest "vX.X.X" version tag for this action

  # Deployment job
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
